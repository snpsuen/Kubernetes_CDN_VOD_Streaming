apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hls-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-hls-config
data:
  hls.conf: |
    server {
      listen 8000;
  
      location / {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Cache-Control' 'no-cache';
          root /var/www/html/hls;   # put your HLS files in /var/www/html/hls
          types {
              text/html html;
              application/vnd.apple.mpegurl m3u8;
              video/mp2t ts;
          }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-hls
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: nginx-hls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-hls
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-hls
  template:
    metadata:
      labels:
        app: nginx-hls
    spec:
      containers:
        - name: nginx-hls
          image: snpsuen/nginx-hls:v02
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: hls-vol
              mountPath: /var/www/html/hls
            - name: nginx-hls-config
              mountPath: /etc/nginx/sites-enabled/hls.conf
              subPath: hls.conf
      volumes:
        - name: hls-vol
          persistentVolumeClaim:
            claimName: hls-pvc
        - name: nginx-hls-config
          configMap:
            name: nginx-hls-config
